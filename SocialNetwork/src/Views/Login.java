package Views;

//Imports
import Classes.*;
import Methods.*;
import Views.*;
import java.awt.*;
import java.awt.event.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lester Trejos
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
   methodsClient metClient = methodsClient.getInstance();
   methodsEvents metEvent = methodsEvents.getInstance();
    
  
    

//Initialize methods with the Frame
    public Login() {
        try {
            initComponents();
            creatUserAdmin();
            createUser();
            SetIcon();
            Events aux1 = metEvent.head;
            if (aux1 != null) {
                eventRealized();
            }else{
  
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error");
        }
     
    }

    //meethod to send username to others frames
    public static String userName1 = "";


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnSignIn = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("UserName");

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });

        jLabel3.setText("Password");

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        btnSignIn.setText("Sign In");
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });

        btnSignUp.setText("Sign Up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(txtPassword)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnSignIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(btnSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSignIn)
                    .addComponent(btnSignUp))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        SignUp fr = new SignUp();//Create signUp Frame XD
        fr.setVisible(true);//Show signUp Frame
        dispose();//Delete actual frame
    }//GEN-LAST:event_btnSignUpActionPerformed
    //Detect enter to sign in
    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        validateUser();
    }//GEN-LAST:event_btnSignInActionPerformed

     //Detect enter to sign in
    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
           validateUser();
            
        }
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
           validateUser();
            
        }
    }//GEN-LAST:event_txtPasswordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSignIn;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
 
    //Create by default the User admin
    public void creatUserAdmin(){
        String userName = "admin";
        String password = "admin";
        String country = "Costa Rica";
        String city = "Santa Clara";
        int id = 0;
        String name = "AdminName";
        String lastName1 = "AdminLastName1";
        String lastName2 = "AdminLastName2";        
        String urlImage = "";
        metClient.InsertOrdered(userName, password,
        country, city, id, name, lastName1,
        lastName2, urlImage);      
    }
    
    public void createUser(){
     String userName = "a";
     String password ="a";
     String country="a";
     String city="a";
     int id=1;
     String name="a";
     String lastName1="a";
     String lastName2="a";
     String urlImage="a";
     
     metClient.InsertOrdered(userName, password, country, city, id, name, lastName1, lastName2, urlImage);
    }
    
    //Validate the login
    public void validateUser() {
        int cont = 0;
        int rol = 0;
        Client aux = metClient.head;
        try {
            if(txtUser.getText().isEmpty() | txtPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Empty Field");
        }
        else{
            do{
                if (txtUser.getText().equals(aux.userName)){
                    if (txtPassword.getText().equals(aux.password)) {
                        if(aux.userName.equals("admin") && aux.password.equals("admin")){
                            rol =1;//admin
                        }else{
                            rol = 2;//user
                        }
                        if (rol == 1) {
                            AdminFrame adminFrame = new AdminFrame();//Create adminFrame
                            adminFrame.setVisible(true);//Show adminFrame
                            dispose();//Close actual Frame
                            return;
                        }else{
                            userName1 = txtUser.getText();
                            UserFrame userFrame = new UserFrame();//Create adminFrame                          
                            userFrame.setVisible(true);//Show adminFrame
                            dispose();//Close actual Frame
                            return;
                        } 
                    }
               }
                aux=aux.next;
                   }while(aux!=metClient.head);
            if (cont == 0 | cont == 1) {
                    JOptionPane.showMessageDialog(null, "Your username and password don't match");

                }            
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "User not found");
        }  
    }
    
    public void SetIcon(){
        ImageIcon imagen = new ImageIcon( "src/Images/login.png");
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(jLabel4.getWidth(),jLabel4.getHeight(),Image.SCALE_DEFAULT));
        jLabel4.setIcon(icono);
    }
    
    public void ConsultAllEvents(Events aux){
        if (aux == null) {
            
        }else{
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date salida = null;
	Date dateTest = new Date();
        String test1 = df.format(dateTest);
       try {
           salida = df.parse(test1);
       } catch (ParseException ex) {
           JOptionPane.showMessageDialog(null, "Error in dates");
       }
        Date testDate = null; 
                try{
                    testDate = aux.eventDate;
                } catch (Exception e){
                    JOptionPane.showMessageDialog(null, "Invalid formar, Enter(dd/MM/yyyy)");
                }
          if (testDate.compareTo(salida) < 0) {
              aux.state = "Realized";
        }
        aux=aux.next;

        while(aux!=metEvent.head){
             SimpleDateFormat df2 = new SimpleDateFormat("dd/MM/yyyy");
             Date salida2 = null;
             Date dateTest2 = new Date();
             String test12 = df2.format(dateTest2);
            try {
                salida2 = df2.parse(test12);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Error in dates");
            }

             Date testDate2 = null; 
                     try{
                         testDate2 = aux.eventDate;
                     } catch (Exception e){
                         
                     }
               if (testDate2.compareTo(salida2) < 0) {
                   aux.state = "Realized";
             }
            
            aux=aux.next;
        }
       }
    }

    public void eventRealized(){
        try {
            Events aux = metEvent.head;
         if (aux == null) {
            JOptionPane.showMessageDialog(null, "No events");
        }else{ 
           ConsultAllEvents(aux);
         }
        } catch (Exception e) {
        }
        
    }
}
